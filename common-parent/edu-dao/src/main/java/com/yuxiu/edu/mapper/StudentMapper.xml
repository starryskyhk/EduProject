<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxiu.edu.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.yuxiu.edu.model.Student">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="chinese_name" jdbcType="VARCHAR" property="chineseName" />
    <result column="english_name" jdbcType="VARCHAR" property="englishName" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="registered_address" jdbcType="VARCHAR" property="registeredAddress" />
    <result column="second_contact_name" jdbcType="VARCHAR" property="secondContactName" />
    <result column="second_contact_phone" jdbcType="VARCHAR" property="secondContactPhone" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chinese_name, english_name, id_number, gender, phone, address, registered_address, 
    second_contact_name, second_contact_phone, degree, username, password
  </sql>
  <select id="selectByExample" parameterType="com.yuxiu.edu.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_student
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yuxiu.edu.model.StudentExample">
    delete from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuxiu.edu.model.Student">
    insert into t_student (id, chinese_name, english_name, 
      id_number, gender, phone, 
      address, registered_address, second_contact_name, 
      second_contact_phone, degree, username, 
      password)
    values (#{id,jdbcType=VARCHAR}, #{chineseName,jdbcType=VARCHAR}, #{englishName,jdbcType=VARCHAR}, 
      #{idNumber,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{registeredAddress,jdbcType=VARCHAR}, #{secondContactName,jdbcType=VARCHAR}, 
      #{secondContactPhone,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yuxiu.edu.model.Student">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chineseName != null">
        chinese_name,
      </if>
      <if test="englishName != null">
        english_name,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="registeredAddress != null">
        registered_address,
      </if>
      <if test="secondContactName != null">
        second_contact_name,
      </if>
      <if test="secondContactPhone != null">
        second_contact_phone,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="chineseName != null">
        #{chineseName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null">
        #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="registeredAddress != null">
        #{registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="secondContactName != null">
        #{secondContactName,jdbcType=VARCHAR},
      </if>
      <if test="secondContactPhone != null">
        #{secondContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuxiu.edu.model.StudentExample" resultType="java.lang.Long">
    select count(*) from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.chineseName != null">
        chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      </if>
      <if test="record.englishName != null">
        english_name = #{record.englishName,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredAddress != null">
        registered_address = #{record.registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.secondContactName != null">
        second_contact_name = #{record.secondContactName,jdbcType=VARCHAR},
      </if>
      <if test="record.secondContactPhone != null">
        second_contact_phone = #{record.secondContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_student
    set id = #{record.id,jdbcType=VARCHAR},
      chinese_name = #{record.chineseName,jdbcType=VARCHAR},
      english_name = #{record.englishName,jdbcType=VARCHAR},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      registered_address = #{record.registeredAddress,jdbcType=VARCHAR},
      second_contact_name = #{record.secondContactName,jdbcType=VARCHAR},
      second_contact_phone = #{record.secondContactPhone,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuxiu.edu.model.Student">
    update t_student
    <set>
      <if test="chineseName != null">
        chinese_name = #{chineseName,jdbcType=VARCHAR},
      </if>
      <if test="englishName != null">
        english_name = #{englishName,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="registeredAddress != null">
        registered_address = #{registeredAddress,jdbcType=VARCHAR},
      </if>
      <if test="secondContactName != null">
        second_contact_name = #{secondContactName,jdbcType=VARCHAR},
      </if>
      <if test="secondContactPhone != null">
        second_contact_phone = #{secondContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuxiu.edu.model.Student">
    update t_student
    set chinese_name = #{chineseName,jdbcType=VARCHAR},
      english_name = #{englishName,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      registered_address = #{registeredAddress,jdbcType=VARCHAR},
      second_contact_name = #{secondContactName,jdbcType=VARCHAR},
      second_contact_phone = #{secondContactPhone,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>